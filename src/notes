                    ANGULAR


Basic Building blocks

1) Module - To import 3rd party Modules(root module - app.module.ts)
2) Component - To create HTML, CSS and TS files


Basic Commands

1) To create a new project - ng new projectname
2) To create a new Component - ng g c componentname
3) To run angular files  - ng serve --open


Basic Concept

1)Data Binding
Share data between components

ts->Component
html->view

1)One way data Binding
data sharing only in one direction(ts->html or html->ts)
  1.1)Component to view(ts->html)

     a)String Interpolation - {{expression}}
     b)Property Binding- [attribute_name]="Property"

  1.2)View to components

     a)Event Binding  - (event_name)="function_name()"
     b) Event binding usng $event-(event_name)="function_name($event)"
     c)Event binding using template referencing variable - #variable_name

2)Two way data binding
Data sharing in both directions(ts->html and html->ts)

   i)ngModel binding - import formsModule in app.module.ts

   [(ngModel)]="property_name"

2)Angular Routing

To set path for component

{
   path:valuee,component:component_name
},

login
{
   path:'',component:LoginComponent
},

3)Angular Services

To hold redundant data

To create a new service - ng g s service_name

4)Dependency Injection

To share data between two dependent classes

constructor(private ds:DataService)

5) Angular Directives - To manipulate DOM

   a)component directives(array)

   b)structural directives(table)
       -> *ngfor
       -> *ngIf

6) Angular Forms
a) Template driven Forms(First design the html template)
b) Model driven Forms(first design model in ts file)
   1)Reactive Forms
   formGroup,array,control
   for advanced validation
   import from Reactive Forms Module(in app.module.ts)

7)Local Storage
   -setItem - To store data in local storage
   -getItem - To get data from local storage
   -removeItem - To remove data from local storage

8) Parent child communication
   parent -> child communication
   child -> parent communication

   eg:
   dashboard -> parent - @Input
   delete -> child - @Output

9)Angular pipes   